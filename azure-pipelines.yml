# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    feedsToUse: 'select'
    vstsFeed: 'dotnet-color-parser-feed' # A series of numbers and letters
- task: gitversion/setup@0
    displayName: 'Install GitTools'
    inputs:
      versionSpec: '5.3.x'
- task: gitversion/execute@0
    displayName: 'Calculate SemVer'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
    versioningScheme: byEnvVar
    versionEnvVar: 'GitVersion.SemVer'
  displayName: 'dotnet build $(buildConfiguration)'
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
#- script: dotnet pack /p:PackageVersion=$(GitVersion.NuGetVersion)  # define version variable elsewhere in your pipeline
# - task: PublishSymbols@2
#   inputs:
#     searchPattern: '**/bin/**/*.pdb'
# - task: NuGetAuthenticate@0
#   inputs:
#     nuGetServiceConnections: 'sebafelisNuGetAccount'
# - task: NuGetCommand@2
#   inputs:
#     command: push
#     nuGetFeedType: external
#     publishFeedCredentials: 'sebafelisNuGetAccount'
#     versioningScheme: byEnvVar
#     versionEnvVar: 'GitVersion.NuGetVersion'

